{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/briancooper/personal/recipes-app/src/Authentication.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\nexport function Authentication({\n  loaded\n}) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    if (loaded) {\n      new window.google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 12,\n        center: {\n          lat: 37.77493,\n          lng: -122.41942\n        }\n      });\n    }\n  }, [loaded]);\n  React.useEffect(() => {\n    function updateSigninStatus(isSignedIn) {\n      if (isSignedIn) {\n        setIsLoggedIn(true);\n        getRecipes();\n      } else {\n        setIsLoggedIn(false);\n      }\n    }\n\n    if (gapi) {\n      gapi.load(\"client:auth2\", () => {\n        gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\"\n        }).then(function () {\n          // Listen for sign-in state changes.\n          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, function (error) {\n          console.error(JSON.stringify(error, null, 2));\n        });\n      });\n    }\n  }, [gapi]);\n\n  function handleAuthClick(event) {\n    gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n\n\n  function getRecipes() {\n    gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: RECIPES_SHEET_ID,\n      range: \"Recipes!A2:L92\"\n    }).then(response => {\n      const recipes = response.result.values;\n\n      if (recipes.length > 0) {\n        global.recipes = recipes;\n      } else {\n        console.error(\"No Data Found\");\n      }\n    }, function (response) {\n      console.error(\"Error: \" + response.result.error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignoutClick,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuthClick,\n      children: \"AUTHORIZE WITH GOOGLE ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authentication, \"NS3kTTUAguel/g6wWMn3M2RoeGc=\");\n\n_c = Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/briancooper/personal/recipes-app/src/Authentication.js"],"names":["React","API_KEY","CLIENT_ID","RECIPES_SHEET_ID","Authentication","loaded","isLoggedIn","setIsLoggedIn","useState","useEffect","window","google","maps","Map","document","getElementById","zoom","center","lat","lng","updateSigninStatus","isSignedIn","getRecipes","gapi","load","client","init","apiKey","clientId","scope","then","auth2","getAuthInstance","listen","get","error","console","JSON","stringify","handleAuthClick","event","signIn","handleSignoutClick","signOut","sheets","spreadsheets","values","spreadsheetId","range","response","recipes","result","length","global","message"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,gBAA7B,QAAqD,aAArD;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAgD;AAAA;;AACrD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAApC;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAIJ,MAAJ,EAAY;AACV,UAAIK,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA3B,EAA2D;AACzDC,QAAAA,IAAI,EAAE,EADmD;AAEzDC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,QAAP;AAAiBC,UAAAA,GAAG,EAAE,CAAC;AAAvB;AAFiD,OAA3D;AAID;AACF,GAPD,EAOG,CAACd,MAAD,CAPH;AAQAL,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,aAASW,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,UAAIA,UAAJ,EAAgB;AACdd,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAe,QAAAA,UAAU;AACX,OAHD,MAGO;AACLf,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;;AACD,QAAIgB,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACC,IAAL,CAAU,cAAV,EAA0B,MAAM;AAC9BD,QAAAA,IAAI,CAACE,MAAL,CACGC,IADH,CACQ;AACJC,UAAAA,MAAM,EAAE1B,OADJ;AAEJ2B,UAAAA,QAAQ,EAAE1B,SAFN;AAGJ2B,UAAAA,KAAK,EAAE;AAHH,SADR,EAMGC,IANH,CAOI,YAAY;AACV;AACAP,UAAAA,IAAI,CAACQ,KAAL,CACGC,eADH,GAEGX,UAFH,CAEcY,MAFd,CAEqBb,kBAFrB,EAFU,CAMV;;AACAA,UAAAA,kBAAkB,CAACG,IAAI,CAACQ,KAAL,CAAWC,eAAX,GAA6BX,UAA7B,CAAwCa,GAAxC,EAAD,CAAlB;AACD,SAfL,EAgBI,UAAUC,KAAV,EAAiB;AACfC,UAAAA,OAAO,CAACD,KAAR,CAAcE,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAd;AACD,SAlBL;AAoBD,OArBD;AAsBD;AACF,GAjCD,EAiCG,CAACZ,IAAD,CAjCH;;AAmCA,WAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BjB,IAAAA,IAAI,CAACQ,KAAL,CAAWC,eAAX,GAA6BS,MAA7B;AACD;;AAED,WAASC,kBAAT,CAA4BF,KAA5B,EAAmC;AACjCjB,IAAAA,IAAI,CAACQ,KAAL,CAAWC,eAAX,GAA6BW,OAA7B;AACD;AAED;AACF;AACA;AACA;;;AACE,WAASrB,UAAT,GAAsB;AACpBC,IAAAA,IAAI,CAACE,MAAL,CAAYmB,MAAZ,CAAmBC,YAAnB,CAAgCC,MAAhC,CACGZ,GADH,CACO;AACHa,MAAAA,aAAa,EAAE5C,gBADZ;AAEH6C,MAAAA,KAAK,EAAE;AAFJ,KADP,EAKGlB,IALH,CAMKmB,QAAD,IAAc;AACZ,YAAMC,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgBL,MAAhC;;AACA,UAAII,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AACtBC,QAAAA,MAAM,CAACH,OAAP,GAAiBA,OAAjB;AACD,OAFD,MAEO;AACLd,QAAAA,OAAO,CAACD,KAAR,CAAc,eAAd;AACD;AACF,KAbL,EAcI,UAAUc,QAAV,EAAoB;AAClBb,MAAAA,OAAO,CAACD,KAAR,CAAc,YAAYc,QAAQ,CAACE,MAAT,CAAgBhB,KAAhB,CAAsBmB,OAAhD;AACD,KAhBL;AAkBD;;AAED,sBACE;AAAA,cACGhD,UAAU,gBACT;AAAQ,MAAA,OAAO,EAAEoC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT;AAAQ,MAAA,OAAO,EAAEH,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxFenC,c;;KAAAA,c","sourcesContent":["import * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\n\nexport function Authentication({ loaded }): React.Node {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  React.useEffect(() => {\n    if (loaded) {\n      new window.google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 12,\n        center: { lat: 37.77493, lng: -122.41942 },\n      });\n    }\n  }, [loaded]);\n  React.useEffect(() => {\n    function updateSigninStatus(isSignedIn) {\n      if (isSignedIn) {\n        setIsLoggedIn(true);\n        getRecipes();\n      } else {\n        setIsLoggedIn(false);\n      }\n    }\n    if (gapi) {\n      gapi.load(\"client:auth2\", () => {\n        gapi.client\n          .init({\n            apiKey: API_KEY,\n            clientId: CLIENT_ID,\n            scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\",\n          })\n          .then(\n            function () {\n              // Listen for sign-in state changes.\n              gapi.auth2\n                .getAuthInstance()\n                .isSignedIn.listen(updateSigninStatus);\n\n              // Handle the initial sign-in state.\n              updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n            },\n            function (error) {\n              console.error(JSON.stringify(error, null, 2));\n            }\n          );\n      });\n    }\n  }, [gapi]);\n\n  function handleAuthClick(event) {\n    gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n  function getRecipes() {\n    gapi.client.sheets.spreadsheets.values\n      .get({\n        spreadsheetId: RECIPES_SHEET_ID,\n        range: \"Recipes!A2:L92\",\n      })\n      .then(\n        (response) => {\n          const recipes = response.result.values;\n          if (recipes.length > 0) {\n            global.recipes = recipes;\n          } else {\n            console.error(\"No Data Found\");\n          }\n        },\n        function (response) {\n          console.error(\"Error: \" + response.result.error.message);\n        }\n      );\n  }\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <button onClick={handleSignoutClick}>LOGOUT</button>\n      ) : (\n        <button onClick={handleAuthClick}>AUTHORIZE WITH GOOGLE ACCOUNT</button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}