{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/briancooper/personal/recipes-app/src/Authentication.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\nexport function Authentication() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    if (global.gapi) {\n      global.gapi.load(\"client:auth2\", initClient);\n    }\n  }, [global.gapi]);\n\n  function initClient() {\n    global.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\"\n    }).then(function () {\n      // Listen for sign-in state changes.\n      global.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(global.gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function (error) {\n      console.error(JSON.stringify(error, null, 2));\n    });\n  }\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      setIsLoggedIn(true);\n      getRecipes();\n    } else {\n      setIsLoggedIn(false);\n    }\n  }\n\n  function handleAuthClick(event) {\n    global.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    global.gapi.auth2.getAuthInstance().signOut();\n  }\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n\n\n  function getRecipes() {\n    global.gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: RECIPES_SHEET_ID,\n      range: \"Recipes!A2:L92\"\n    }).then(response => {\n      const recipes = response.result.values;\n\n      if (recipes.length > 0) {\n        global.recipes = recipes;\n      } else {\n        console.error(\"No Data Found\");\n      }\n    }, function (response) {\n      console.error(\"Error: \" + response.result.error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignoutClick,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuthClick,\n      children: \"AUTHORIZE WITH GOOGLE ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authentication, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/briancooper/personal/recipes-app/src/Authentication.js"],"names":["React","API_KEY","CLIENT_ID","RECIPES_SHEET_ID","Authentication","isLoggedIn","setIsLoggedIn","useState","useEffect","global","gapi","load","initClient","client","init","apiKey","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","error","console","JSON","stringify","getRecipes","handleAuthClick","event","signIn","handleSignoutClick","signOut","sheets","spreadsheets","values","spreadsheetId","range","response","recipes","result","length","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\n\nexport function Authentication(): React.Node {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    if (global.gapi) {\n      global.gapi.load(\"client:auth2\", initClient);\n    }\n  }, [global.gapi]);\n\n  function initClient() {\n    global.gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\",\n      })\n      .then(\n        function () {\n          // Listen for sign-in state changes.\n          global.gapi.auth2\n            .getAuthInstance()\n            .isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(\n            global.gapi.auth2.getAuthInstance().isSignedIn.get()\n          );\n        },\n        function (error) {\n          console.error(JSON.stringify(error, null, 2));\n        }\n      );\n  }\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      setIsLoggedIn(true);\n      getRecipes();\n    } else {\n      setIsLoggedIn(false);\n    }\n  }\n\n  function handleAuthClick(event) {\n    global.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    global.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n  function getRecipes() {\n    global.gapi.client.sheets.spreadsheets.values\n      .get({\n        spreadsheetId: RECIPES_SHEET_ID,\n        range: \"Recipes!A2:L92\",\n      })\n      .then(\n        (response) => {\n          const recipes = response.result.values;\n          if (recipes.length > 0) {\n            global.recipes = recipes;\n          } else {\n            console.error(\"No Data Found\");\n          }\n        },\n        function (response) {\n          console.error(\"Error: \" + response.result.error.message);\n        }\n      );\n  }\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <button onClick={handleSignoutClick}>LOGOUT</button>\n      ) : (\n        <button onClick={handleAuthClick}>AUTHORIZE WITH GOOGLE ACCOUNT</button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}