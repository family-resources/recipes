{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/briancooper/personal/recipes-app/src/Authentication.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\nexport function Authentication({\n  loaded,\n  setRecipes\n}) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    const {\n      gapi\n    } = global;\n\n    if (loaded) {\n      function updateSigninStatus(isSignedIn) {\n        if (isSignedIn) {\n          setIsLoggedIn(true);\n          getRecipes();\n        } else {\n          setIsLoggedIn(false);\n        }\n      }\n\n      if (gapi) {\n        gapi.load(\"client:auth2\", () => {\n          gapi.client.init({\n            apiKey: API_KEY,\n            clientId: CLIENT_ID,\n            discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n            scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\"\n          }).then(function () {\n            // Listen for sign-in state changes.\n            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n            updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n          }, function (error) {\n            console.error(JSON.stringify(error, null, 2));\n          });\n        });\n      }\n    }\n  }, [loaded]);\n\n  function handleAuthClick(event) {\n    global.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    global.gapi.auth2.getAuthInstance().signOut();\n  }\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n\n\n  function getRecipes() {\n    global.gapi.client.sheets.spreadsheets.values.get({\n      spreadsheetId: RECIPES_SHEET_ID,\n      range: \"Recipes!A2:L92\"\n    }).then(response => {\n      const recipes = response.result.values;\n\n      if (recipes.length > 0) {\n        setRecipes(recipes);\n      } else {\n        console.error(\"No Data Found\");\n      }\n    }, function (response) {\n      console.error(\"Error: \" + response.result.error.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignoutClick,\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuthClick,\n      children: \"AUTHORIZE WITH GOOGLE ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authentication, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/briancooper/personal/recipes-app/src/Authentication.js"],"names":["React","API_KEY","CLIENT_ID","RECIPES_SHEET_ID","Authentication","loaded","setRecipes","isLoggedIn","setIsLoggedIn","useState","useEffect","gapi","global","updateSigninStatus","isSignedIn","getRecipes","load","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","listen","get","error","console","JSON","stringify","handleAuthClick","event","signIn","handleSignoutClick","signOut","sheets","spreadsheets","values","spreadsheetId","range","response","recipes","result","length","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { API_KEY, CLIENT_ID, RECIPES_SHEET_ID } from \"./constants\";\n\nexport function Authentication({ loaded, setRecipes }): React.Node {\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  React.useEffect(() => {\n    const { gapi } = global;\n    if (loaded) {\n      function updateSigninStatus(isSignedIn) {\n        if (isSignedIn) {\n          setIsLoggedIn(true);\n          getRecipes();\n        } else {\n          setIsLoggedIn(false);\n        }\n      }\n      if (gapi) {\n        gapi.load(\"client:auth2\", () => {\n          gapi.client\n            .init({\n              apiKey: API_KEY,\n              clientId: CLIENT_ID,\n              discoveryDocs: [\n                \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\n              ],\n              scope: \"https://www.googleapis.com/auth/spreadsheets.readonly\",\n            })\n            .then(\n              function () {\n                // Listen for sign-in state changes.\n                gapi.auth2\n                  .getAuthInstance()\n                  .isSignedIn.listen(updateSigninStatus);\n\n                // Handle the initial sign-in state.\n                updateSigninStatus(\n                  gapi.auth2.getAuthInstance().isSignedIn.get()\n                );\n              },\n              function (error) {\n                console.error(JSON.stringify(error, null, 2));\n              }\n            );\n        });\n      }\n    }\n  }, [loaded]);\n\n  function handleAuthClick(event) {\n    global.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    global.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  /**\n   * Print the contents of the spreadsheet\n   * https://docs.google.com/spreadsheets/d/1mlCIY1G-CW1EfNddv7tjEVJoXCz6TyXLcNfqLdBRkzU/edit#gid=1825319816\n   */\n  function getRecipes() {\n    global.gapi.client.sheets.spreadsheets.values\n      .get({\n        spreadsheetId: RECIPES_SHEET_ID,\n        range: \"Recipes!A2:L92\",\n      })\n      .then(\n        (response) => {\n          const recipes = response.result.values;\n          if (recipes.length > 0) {\n            setRecipes(recipes);\n          } else {\n            console.error(\"No Data Found\");\n          }\n        },\n        function (response) {\n          console.error(\"Error: \" + response.result.error.message);\n        }\n      );\n  }\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <button onClick={handleSignoutClick}>LOGOUT</button>\n      ) : (\n        <button onClick={handleAuthClick}>AUTHORIZE WITH GOOGLE ACCOUNT</button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}